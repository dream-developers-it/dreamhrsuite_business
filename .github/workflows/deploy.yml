name: Deploy to Production

on:
  push:
    branches:
      - productidon

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install whitenoise gunicorn

    - name: Run tests
      run: |
        python manage.py test

    - name: Collect static files
      run: |
        python manage.py collectstatic --noinput
      env:
        DJANGO_SETTINGS_MODULE: dreamhrbusiness.settings

    - name: Deploy to Production
      uses: appleboy/ssh-action@master
      with:
        host: 52.74.218.98
        username: ${{ secrets.SSH_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          cd /var/www/html/dreamhrai.com
          
          # Activate virtual environment if exists, or create one
          if [ ! -d "venv" ]; then
            python3 -m venv venv
          fi
          source venv/bin/activate
          
          # Pull latest changes
          git checkout production
          git pull origin production
          
          # Install/upgrade dependencies
          pip install -r requirements.txt
          pip install whitenoise gunicorn
          
          # Collect static files
          python manage.py collectstatic --noinput
          
          # Run migrations
          python manage.py migrate --noinput
          
          # Restart Gunicorn (assuming you're using systemd)
          sudo systemctl restart gunicorn
          
          # Restart Nginx
          sudo systemctl restart nginx
          
          # Clear Django cache
          python manage.py clear_cache || true
          
          # Set proper permissions
          sudo chown -R www-data:www-data /var/www/html/dreamhrai.com
          sudo chmod -R 755 /var/www/html/dreamhrai.com

    - name: Send deployment notification
      if: always()
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        SLACK_MESSAGE: 'Production deployment ${{ job.status }}' 